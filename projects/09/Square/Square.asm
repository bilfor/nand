@256
D=A
@SP
M=D
@999
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@1
M=D
@888
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@2
M=D
@777
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@3
M=D
@666
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@4
M=D
// call Sys.init 0
@Sys.init$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init$ret.1)
// ~Square.vm
// function Square.new 0
(Square.new)
// push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Memory.alloc 1
@Memory.alloc$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Memory.alloc$ret.2)
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push argument 1
@2
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push argument 2
@2
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 2
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@2
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.draw 1
@Square.draw$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.draw
0;JMP
(Square.draw$ret.3)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Square.dispose 0
(Square.dispose)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Memory.deAlloc 1
@Memory.deAlloc$ret.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Memory.deAlloc$ret.4)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Square.draw 0
(Square.draw)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Screen.setColor$ret.5
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor$ret.5)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Screen.drawRectangle$ret.6
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle$ret.6)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Square.erase 0
(Square.erase)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Screen.setColor$ret.7
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor$ret.7)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Screen.drawRectangle$ret.8
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle$ret.8)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Square.incSize 0
(Square.incSize)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 254
@254
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@LT_1
D;JLT
@NOT_LT_1
0;JMP
(LT_1)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_LT_1
0;JMP
(NOT_LT_1)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_LT_1)
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 510
@510
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@LT_2
D;JLT
@NOT_LT_2
0;JMP
(LT_2)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_LT_2
0;JMP
(NOT_LT_2)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_LT_2)
// and
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=M&D
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE0
D;JNE
// goto IF_FALSE0
@IF_FALSE0
0;JMP
// label IF_TRUE0
(IF_TRUE0)
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.erase 1
@Square.erase$ret.9
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.erase
0;JMP
(Square.erase$ret.9)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 2
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@2
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.draw 1
@Square.draw$ret.10
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.draw
0;JMP
(Square.draw$ret.10)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE0
(IF_FALSE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Square.decSize 0
(Square.decSize)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@GT_1
D;JGT
@NOT_GT_1
0;JMP
(GT_1)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_GT_1
0;JMP
(NOT_GT_1)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_GT_1)
// if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE0
D;JNE
// goto IF_FALSE0
@IF_FALSE0
0;JMP
// label IF_TRUE0
(IF_TRUE0)
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.erase 1
@Square.erase$ret.11
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.erase
0;JMP
(Square.erase$ret.11)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 2
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@2
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.draw 1
@Square.draw$ret.12
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.draw
0;JMP
(Square.draw$ret.12)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE0
(IF_FALSE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Square.moveUp 0
(Square.moveUp)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@GT_2
D;JGT
@NOT_GT_2
0;JMP
(GT_2)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_GT_2
0;JMP
(NOT_GT_2)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_GT_2)
// if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE0
D;JNE
// goto IF_FALSE0
@IF_FALSE0
0;JMP
// label IF_TRUE0
(IF_TRUE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Screen.setColor$ret.13
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor$ret.13)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Screen.drawRectangle$ret.14
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle$ret.14)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Screen.setColor$ret.15
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor$ret.15)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Screen.drawRectangle$ret.16
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle$ret.16)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE0
(IF_FALSE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Square.moveDown 0
(Square.moveDown)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 254
@254
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@LT_3
D;JLT
@NOT_LT_3
0;JMP
(LT_3)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_LT_3
0;JMP
(NOT_LT_3)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_LT_3)
// if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE0
D;JNE
// goto IF_FALSE0
@IF_FALSE0
0;JMP
// label IF_TRUE0
(IF_TRUE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Screen.setColor$ret.17
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor$ret.17)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Screen.drawRectangle$ret.18
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle$ret.18)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Screen.setColor$ret.19
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor$ret.19)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Screen.drawRectangle$ret.20
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle$ret.20)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE0
(IF_FALSE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Square.moveLeft 0
(Square.moveLeft)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@GT_3
D;JGT
@NOT_GT_3
0;JMP
(GT_3)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_GT_3
0;JMP
(NOT_GT_3)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_GT_3)
// if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE0
D;JNE
// goto IF_FALSE0
@IF_FALSE0
0;JMP
// label IF_TRUE0
(IF_TRUE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Screen.setColor$ret.21
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor$ret.21)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Screen.drawRectangle$ret.22
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle$ret.22)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Screen.setColor$ret.23
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor$ret.23)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Screen.drawRectangle$ret.24
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle$ret.24)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE0
(IF_FALSE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function Square.moveRight 0
(Square.moveRight)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 510
@510
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@LT_4
D;JLT
@NOT_LT_4
0;JMP
(LT_4)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_LT_4
0;JMP
(NOT_LT_4)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_LT_4)
// if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE0
D;JNE
// goto IF_FALSE0
@IF_FALSE0
0;JMP
// label IF_TRUE0
(IF_TRUE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Screen.setColor$ret.25
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor$ret.25)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Screen.drawRectangle$ret.26
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle$ret.26)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop this 0
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.setColor 1
@Screen.setColor$ret.27
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.setColor
0;JMP
(Screen.setColor$ret.27)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push this 2
@3
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D+M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Screen.drawRectangle 4
@Screen.drawRectangle$ret.28
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Screen.drawRectangle
0;JMP
(Screen.drawRectangle$ret.28)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE0
(IF_FALSE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// ~Main.vm
// function Main.main 1
(Main.main)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// call SquareGame.new 0
@SquareGame.new$ret.29
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@SquareGame.new
0;JMP
(SquareGame.new$ret.29)
// pop local 0
@SP
M=M-1
A=M
D=M
@R13
M=D
@1
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// call SquareGame.run 1
@SquareGame.run$ret.30
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@SquareGame.run
0;JMP
(SquareGame.run$ret.30)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// call SquareGame.dispose 1
@SquareGame.dispose$ret.31
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@SquareGame.dispose
0;JMP
(SquareGame.dispose$ret.31)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// ~SquareGame.vm
// function SquareGame.new 0
(SquareGame.new)
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Memory.alloc 1
@Memory.alloc$ret.32
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.alloc
0;JMP
(Memory.alloc$ret.32)
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 30
@30
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Square.new 3
@Square.new$ret.33
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.new
0;JMP
(Square.new$ret.33)
// pop this 0
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function SquareGame.dispose 0
(SquareGame.dispose)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.dispose 1
@Square.dispose$ret.34
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.dispose
0;JMP
(Square.dispose$ret.34)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Memory.deAlloc 1
@Memory.deAlloc$ret.35
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Memory.deAlloc
0;JMP
(Memory.deAlloc$ret.35)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function SquareGame.moveSquare 0
(SquareGame.moveSquare)
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_1
D;JEQ
@NOT_EQUAL_1
0;JMP
(EQUAL_1)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_1
0;JMP
(NOT_EQUAL_1)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_1)
// if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE0
D;JNE
// goto IF_FALSE0
@IF_FALSE0
0;JMP
// label IF_TRUE0
(IF_TRUE0)
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.moveUp 1
@Square.moveUp$ret.36
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.moveUp
0;JMP
(Square.moveUp$ret.36)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE0
(IF_FALSE0)
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_2
D;JEQ
@NOT_EQUAL_2
0;JMP
(EQUAL_2)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_2
0;JMP
(NOT_EQUAL_2)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_2)
// if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE1
D;JNE
// goto IF_FALSE1
@IF_FALSE1
0;JMP
// label IF_TRUE1
(IF_TRUE1)
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.moveDown 1
@Square.moveDown$ret.37
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.moveDown
0;JMP
(Square.moveDown$ret.37)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE1
(IF_FALSE1)
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_3
D;JEQ
@NOT_EQUAL_3
0;JMP
(EQUAL_3)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_3
0;JMP
(NOT_EQUAL_3)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_3)
// if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE2
D;JNE
// goto IF_FALSE2
@IF_FALSE2
0;JMP
// label IF_TRUE2
(IF_TRUE2)
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.moveLeft 1
@Square.moveLeft$ret.38
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.moveLeft
0;JMP
(Square.moveLeft$ret.38)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE2
(IF_FALSE2)
// push this 1
@3
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_4
D;JEQ
@NOT_EQUAL_4
0;JMP
(EQUAL_4)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_4
0;JMP
(NOT_EQUAL_4)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_4)
// if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE3
D;JNE
// goto IF_FALSE3
@IF_FALSE3
0;JMP
// label IF_TRUE3
(IF_TRUE3)
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.moveRight 1
@Square.moveRight$ret.39
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.moveRight
0;JMP
(Square.moveRight$ret.39)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE3
(IF_FALSE3)
// push constant 5
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Sys.wait 1
@Sys.wait$ret.40
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.wait
0;JMP
(Sys.wait$ret.40)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
// function SquareGame.run 2
(SquareGame.run)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push argument 0
@2
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0
@SP
M=M-1
A=M
D=M
@R3
M=D
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop local 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@1
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// label WHILE_EXP0
(WHILE_EXP0)
// push local 1
@1
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// if-goto WHILE_END0
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@WHILE_END0
D;JNE
// label WHILE_EXP1
(WHILE_EXP1)
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_5
D;JEQ
@NOT_EQUAL_5
0;JMP
(EQUAL_5)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_5
0;JMP
(NOT_EQUAL_5)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_5)
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// if-goto WHILE_END1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@WHILE_END1
D;JNE
// call Keyboard.keyPressed 0
@Keyboard.keyPressed$ret.41
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.keyPressed$ret.41)
// pop local 0
@SP
M=M-1
A=M
D=M
@R13
M=D
@1
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// call SquareGame.moveSquare 1
@SquareGame.moveSquare$ret.42
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@SquareGame.moveSquare
0;JMP
(SquareGame.moveSquare$ret.42)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// goto WHILE_EXP1
@WHILE_EXP1
0;JMP
// label WHILE_END1
(WHILE_END1)
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 81
@81
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_6
D;JEQ
@NOT_EQUAL_6
0;JMP
(EQUAL_6)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_6
0;JMP
(NOT_EQUAL_6)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_6)
// if-goto IF_TRUE0
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE0
D;JNE
// goto IF_FALSE0
@IF_FALSE0
0;JMP
// label IF_TRUE0
(IF_TRUE0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop local 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@1
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// label IF_FALSE0
(IF_FALSE0)
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 90
@90
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_7
D;JEQ
@NOT_EQUAL_7
0;JMP
(EQUAL_7)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_7
0;JMP
(NOT_EQUAL_7)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_7)
// if-goto IF_TRUE1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE1
D;JNE
// goto IF_FALSE1
@IF_FALSE1
0;JMP
// label IF_TRUE1
(IF_TRUE1)
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.decSize 1
@Square.decSize$ret.43
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.decSize
0;JMP
(Square.decSize$ret.43)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE1
(IF_FALSE1)
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 88
@88
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_8
D;JEQ
@NOT_EQUAL_8
0;JMP
(EQUAL_8)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_8
0;JMP
(NOT_EQUAL_8)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_8)
// if-goto IF_TRUE2
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE2
D;JNE
// goto IF_FALSE2
@IF_FALSE2
0;JMP
// label IF_TRUE2
(IF_TRUE2)
// push this 0
@3
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// call Square.incSize 1
@Square.incSize$ret.44
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Square.incSize
0;JMP
(Square.incSize$ret.44)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// label IF_FALSE2
(IF_FALSE2)
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 131
@131
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_9
D;JEQ
@NOT_EQUAL_9
0;JMP
(EQUAL_9)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_9
0;JMP
(NOT_EQUAL_9)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_9)
// if-goto IF_TRUE3
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE3
D;JNE
// goto IF_FALSE3
@IF_FALSE3
0;JMP
// label IF_TRUE3
(IF_TRUE3)
// push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// label IF_FALSE3
(IF_FALSE3)
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 133
@133
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_10
D;JEQ
@NOT_EQUAL_10
0;JMP
(EQUAL_10)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_10
0;JMP
(NOT_EQUAL_10)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_10)
// if-goto IF_TRUE4
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE4
D;JNE
// goto IF_FALSE4
@IF_FALSE4
0;JMP
// label IF_TRUE4
(IF_TRUE4)
// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// label IF_FALSE4
(IF_FALSE4)
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 130
@130
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_11
D;JEQ
@NOT_EQUAL_11
0;JMP
(EQUAL_11)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_11
0;JMP
(NOT_EQUAL_11)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_11)
// if-goto IF_TRUE5
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE5
D;JNE
// goto IF_FALSE5
@IF_FALSE5
0;JMP
// label IF_TRUE5
(IF_TRUE5)
// push constant 3
@3
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// label IF_FALSE5
(IF_FALSE5)
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 132
@132
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_12
D;JEQ
@NOT_EQUAL_12
0;JMP
(EQUAL_12)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_12
0;JMP
(NOT_EQUAL_12)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_12)
// if-goto IF_TRUE6
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@IF_TRUE6
D;JNE
// goto IF_FALSE6
@IF_FALSE6
0;JMP
// label IF_TRUE6
(IF_TRUE6)
// push constant 4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop this 1
@SP
M=M-1
A=M
D=M
@R13
M=D
@3
D=M
@1
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// label IF_FALSE6
(IF_FALSE6)
// label WHILE_EXP2
(WHILE_EXP2)
// push local 0
@1
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@EQUAL_13
D;JEQ
@NOT_EQUAL_13
0;JMP
(EQUAL_13)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R14
M=D
@R14
D=M
@R13
M=D-M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
@END_EQ_13
0;JMP
(NOT_EQUAL_13)
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
(END_EQ_13)
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// not
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
M=!M
@13
D=M
@SP
A=M
M=D
@SP
M=M+1
// if-goto WHILE_END2
@SP
M=M-1
A=M
D=M
@R13
M=D
@R13
D=M
@WHILE_END2
D;JNE
// call Keyboard.keyPressed 0
@Keyboard.keyPressed$ret.45
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@Keyboard.keyPressed
0;JMP
(Keyboard.keyPressed$ret.45)
// pop local 0
@SP
M=M-1
A=M
D=M
@R13
M=D
@1
D=M
@0
D=D+A
@R14
M=D
@R13
D=M
@R14
A=M
M=D
// push pointer 0
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
// call SquareGame.moveSquare 1
@SquareGame.moveSquare$ret.46
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
@ARG
M=D
@SP
D=M
@LCL
M=D
@SquareGame.moveSquare
0;JMP
(SquareGame.moveSquare$ret.46)
// pop temp 0
@SP
M=M-1
A=M
D=M
@R5
M=D
// goto WHILE_EXP2
@WHILE_EXP2
0;JMP
// label WHILE_END2
(WHILE_END2)
// goto WHILE_EXP0
@WHILE_EXP0
0;JMP
// label WHILE_END0
(WHILE_END0)
// push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
M=M-1
A=M
D=M
@R15
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@R14
M=D
@SP
A=M
A=A-1
D=M
@ARG
A=M
M=D
@SP
M=M-1
@ARG
D=M
D=D+1
@SP
M=D
@R15
D=M
D=D-1
A=D
D=M
@THAT
M=D
@R15
D=M
D=D-1
D=D-1
A=D
D=M
@THIS
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
A=D
D=M
@ARG
M=D
@R15
D=M
D=D-1
D=D-1
D=D-1
D=D-1
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP
